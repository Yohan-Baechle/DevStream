name: Commit avec heure aléatoire

on:
  schedule:
    - cron: '0 9 * * 1-5' # Exécute ce workflow chaque jour de la semaine à 9h UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Configurer Git
      run: |
        git config --global user.email "baechle.yohan@gmail.com"
        git config --global user.name "Yohan-Baechle"
    
    - name: Ajouter un délai aléatoire avant l'exécution
      run: |
        # Délai aléatoire entre 0 et 6 heures (21600 secondes)
        DELAY=$(( RANDOM % 21600 ))
        echo "Attente de $DELAY secondes avant de commencer le commit"
        sleep $DELAY

    - name: Vérifie si un commit doit être fait et exécute les commits
      run: |
        # Détermine le nombre de commits à faire (entre 0 et 2)
        COMMIT_TIMES=$(( $RANDOM % 3 ))

        # Exécute un nombre de fois aléatoire basé sur COMMIT_TIMES
        for i in $(seq 1 $COMMIT_TIMES)
        do
          # S'assure que le dépôt local est à jour avec le dépôt distant
          git pull origin main --rebase

          # Génère un fichier avec la date et l'heure actuelle comme contenu
          DATE=$(date +"%Y-%m-%d %H:%M:%S")
          echo "Dernier commit le $DATE" > date.txt
          # Crée un commit avec un message incluant la date et l'heure actuelle
          git add .
          git commit -m "Automated update: $(date +'%Y-%m-%d %H:%M:%S')"
          # Push les changements
          git push origin main
          
          # Pause aléatoire entre les commits pour plus de naturalité, ajustez selon besoin
          sleep $(( $RANDOM % 1800 )) # Pause entre 0 et 30 minutes
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
